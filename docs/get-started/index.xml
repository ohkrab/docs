<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Get started on Oh, Krab!</title><link>https://ohkrab.dev/docs/get-started/</link><description>Recent content in Get started on Oh, Krab!</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ohkrab.dev/docs/get-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://ohkrab.dev/docs/get-started/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ohkrab.dev/docs/get-started/overview/</guid><description>Krab documentation consists of the following chapters:
Get started - things to get you set up and running Configuration - resources to use in the configuration files Functions - functions to use in the configuration files Commands - manual for CLI Glossary # configuration file - file with .krab.hcl extension resource - block of code of a given type in a configuration file (e.g. migration resource, migration_set resource etc.) function - built-in function that is available to use in config files command - CLI command that executes built-in action like migrate up reference - identifiable name of a resource, must be unique within a given type (migration &amp;quot;that_is_reference&amp;quot; {.</description></item><item><title>Installation</title><link>https://ohkrab.dev/docs/get-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ohkrab.dev/docs/get-started/installation/</guid><description>binary # Krab binary can be downloaded from GitHub. Other methods are listed below.
asdf # Krab provides asdf plugin (make sure you have asdf updated):
asdf plugin add krab Install desired version:
asdf install krab 0.7.0 Set it to your project:
asdf local krab 0.7.0 docker # Docker images can be found at GitHub packages.
To start a docker container a DATABASE_URL environment variable must be provided. By default &amp;ldquo;krab&amp;rdquo; reads configuration from /etc/krab that must be mounted as a volume, the path can be changed by KRAB_DIR environment variable.</description></item><item><title>Quick start</title><link>https://ohkrab.dev/docs/get-started/quick_start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ohkrab.dev/docs/get-started/quick_start/</guid><description>Generate migration # Go to your project (/tmp folder is used as an example):
mkdir -p /tmp/project cd /tmp/project and generate migration:
krab gen migration -name create_animals id name:varchar color:varchar weight:int timestamps This will generate file and print the output:
File generated: /tmp/project/db/migrations/20230213_210359_create_animals.krab.hcl Don&amp;#39;t forget to add your migration to migration_set: migration_set &amp;#34;public&amp;#34; { migrations = [ ... migration.create_animals, ... ] } File will contain:
migration &amp;#34;create_animals&amp;#34; { version = &amp;#34;20230213_210359&amp;#34; up { create_table &amp;#34;animals&amp;#34; { column &amp;#34;id&amp;#34; &amp;#34;bigint&amp;#34; { identity {} } column &amp;#34;name&amp;#34; &amp;#34;varchar&amp;#34; {} column &amp;#34;color&amp;#34; &amp;#34;varchar&amp;#34; {} column &amp;#34;weight&amp;#34; &amp;#34;int&amp;#34; {} column &amp;#34;created_at&amp;#34; &amp;#34;timestamptz&amp;#34; { null = false } column &amp;#34;updated_at&amp;#34; &amp;#34;timestamptz&amp;#34; { null = false } primary_key { columns = [&amp;#34;id&amp;#34;] } } } down { drop_table &amp;#34;animals&amp;#34; {} } } Since this is your first migration you need to create migration set that holds the list of migrations.</description></item><item><title>Changelog</title><link>https://ohkrab.dev/docs/get-started/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ohkrab.dev/docs/get-started/changelog/</guid><description>0.7.0 # add fake generator for actions 0.6.2 # build with go 1.19 0.6.1 # add params to migration generator 0.6.0 # generate migration command 0.5.0 # rewrite parser from hclsimple to schema based decoding make defaults in columns DSL universal (raw SQL, no custom HCL type) 0.4.2 # add quote support for values add support for more defaults in column DSL 0.4.1 # migration status action be explicit about identifier quoting (quote -&amp;gt; quote_ident) improved CLI UI 0.</description></item></channel></rss>